# 조건문 추가문제 (if~elif~else)
'''
[문제]
키를 입력받아 185cm이상이면 Tall, 145cm이하면 Short, 그 외에는 Regular를 출력하는
프로그램을 작성하시오.

[출력결과]
키를 입력하세요 : 180.0
Regular

[정답]
height = float(input('키를 입력하세요 : '))

if height >= 185.0:
    print('Tall')
elif height <= 145.0:
    print('Small')
else:
    print('Regular')

'''



'''
[문제]
학생의 학점을 입력받아, 학점이 A와 B인 학생에게 '참 잘했습니다.',
학점이 C와 D인 학생에게 '좀 더 노력하세요.',
학점이 F인 학생에게 '다음 학기에 다시 수강하세요.'를 출력하는 프로그램을 작성하시오.

[출력결과]
학점을 입력하세요 : B
참 잘했습니다.

[정답]
grade = input('학점을 입력하세요 : ')

if grade == 'A' or grade == 'B':
    print('참 잘했습니다.')
elif grade == 'C' or grade == 'D':
    print('좀 더 노력하세요.')
elif grade == 'F':
    print('다음 학기에 다시 수강하세요.')    
else:
    print('잘못 입력하셨습니다. 다시 입력하세요.')
'''



'''
[문제] 윤년 판단
년도를 입력받아 윤년인지 판정해주는 프로그램을 작성하시오.

- 년수가 4로 나누어 떨어지는 해는 윤년
- 그 중에서 100으로 나누어 떨어지는 해는 평년
- 다만 400으로 나누어 떨어지면 다시 윤년
- 2016년은 윤년, 2100년은 평년, 2000년은 윤년

[출력결과]
년도를 입력하세요 : 2020
윤년입니다!

[결과]
year = int(input('년도를 입력하세요 : '))

if year % 400 == 0 or (year % 4 == 0 and year % 100 != 0):
    print('윤년입니다!')
else:
    print('평년입니다!')

'''



'''
[문제]
한 점을 구성하는 (x, y) 좌표를 입력받고, 이 점이 (50, 40), (50, 80), (100, 40), (100, 80)을
꼭짓점으로 갖는 사각형 안에 있는지 판별하는 프로그램을 작성하시오.

[출력결과1]
x 좌표 입력하시오 : 60
y 좌표 입력하시오 : 100
사각형 안에 없습니다.

[출력결과2]
x 좌표 입력하시오 : 80
y 좌표 입력하시오 : 70
사각형 안에 있습니다.

[정답]
'''
x = int(input('x 좌표 입력하시오 : '))
y = int(input('y 좌표 입력하시오 : '))
if (50 < x < 100) and (40 < y < 80):
    print('사각형 안에 있습니다.')
else:
    print('사각형 안에 없습니다.')
    

===================================================
# 반복문
'''
[문제] while 문을 이용해서 1부터 100까지의 홀수만 출력하기

[출력결과]
1
3
5
...
97
99


[정답]
i = 1
while i < 100:
    print(i)
    i += 2 # i = i + 2
'''



'''
[문제] for문을 이용해서 1~5까지의 숫자들을 차례대로 출력하기

[출력결과]
1 2 3 4 5


[정답]
for i in range(1, 6, 1):
    print(i, end = ' ')
    
'''



'''
[문제] for문을 이용해서 1부터 10까지의 합을 구하시오.

[출력결과]
1부터 10까지의 합 : 55


[정답]
hap = 0

for i in range(1, 11, 1):
    hap += i                       # hap = hap + i

print('1부터 10까지의 합 : {}' .format(hap))  

'''



'''
[문제] for문을 이용해서 1부터 100사이의 정수 중 5와 7의 공배수 출력하기

[출력결과]
35 : 5와 7의 공배수!!
70 : 5와 7의 공배수!!

[정답]
for i in range(1, 101):
    if i % 5 == 0 and i % 7 == 0:
        print(i, ': 5와 7의 공배수!!')
        
'''


===============================================

20200710


# 중첩 for문을 사용한 구구단 만들기


for i in range(2,10):   #2~9단까지 반복
    for k in range(1,10):   # 각 단의 뒷자리 숫자 1~9까지 반복
        print(f'{i} X {k} = {i*k}') #구구단 형식 출력
    print()             # 각 단이 끝나면 한 줄 띄우려고 작성


--
# 터틀 그래픽스 모듈로 그림 그리기

    <형식>
    import turtle
    또는
    import turtle as t  # t라는 별칭, turtle 대신 쓸수 있음


    거북이 모양 : arrow(화살표), triangle(삼각형), circle(원), blank(빈칸), turtle(거북이)
                  생략하면 기본 화살표 모양

--
ex) 사각형 그리기

import turtle as t # 별칭 t를 가진 터틀 라이브러리는 불러온다.

t.shape('turtle')       #마우스(화살표)  모양을 turtle로 바꾸겟다.

for i in range(4):      # 4번 반복하겠다.
    t.right(90)         # 오른쪽으로 90도 회전
    t.forward(100)      # 이동. 100px
                        # 사각형이 그려짐
--

ex) 값을 입력받아 다각형 그리기

import turtle as t
t.shape('turtle')

n=int(input('몇 각형을 그리시겠습니까?')) #사용자에게 입력받은 수를 n에 담는다

for i in range(n):
    t.fd(150)   #forward의 줄임말 #앞으로 150px만큼 이동
    t.rt(360/n) #right의 줄임말 #외각구하는 공식 = 360/각형

--
# 원 그리기

import turtle as t
t.shape('turtle')
t.color('hotpink') # 선 색깔 바꾸기

t.circle(100) #반지름 100px인 원 그림

--
# 별 그리기

for i in range(5):  #별 꼭지점이 5개라서
    t.fd(200)
    t.rt(144) #오른쪽으로 144(72*20)도 회전
    t.fd(200)
    t.lt(72) #왼쪽으로 72(360/5)도 회전
--

ex) 다양한 모양 (1)

import turtle as t
t.shape('turtle')
t.color('blue')
t.bgcolor('yellow') #배경색 변경
t.speed(10)     #1이 가장 느리고 10이 가장 빠름

for i in range(100): #숫자를 높이면 도넛같은 모양나옴
    t.fd(200)
    t.lt(89)

--

ex) 다양한 모양 (2)

import turtle as t
t.shape('turtle')
t.speed(10)

for i in range(200):
    t.fd(i)     # i 만큰 앞으로 이동. 반복할때 마다 선이 길어짐(1씩 증가함으로)
    t.lt(90)
    
--

# 사용자가 입력한 도형 그리기

import turtle as t
t.shape('turtle')
t.pensize(3)    #선굵기를 3으로 한다
t.shapesize(3,3)    #거북이를 3배 확대

n=t.textinput('창제목', '도형을 입력하세요: ') #도형을 입력받는다(문자형태로)

if n =='사각형':   # 직사각형이라면
    w = int(t.textinput('','가로: ')) #w변수에 가로변을 입력받는다(정수형태)
    h = int(t.textinput('','세로: ')) #h변수에 세로변을 입력받는다(정수형태)
    for i in range(2):
        t.fd(w) #가로
        t.lt(90)
        t.fd(h) #세로
        t.lt(90)
elif n=='원':
    size = int(t.textinput('','반지름: '))
    t.circle(size)
elif n=='별':
    size = int(t.textinput('','크기 : '))
    for i in range(5):
        t.fd(size)
        t.rt(144)
        t.fd(size)
        t.lt(72)
else:
    print('잘못입력하셨습니다.')

--

# 함수(function)

 특정 용도의 코드를 한곳에 모아 놓은것
 한번만 작성해 놓으면 나중에 필요 할때 계속 불러 와서 쓸수 있다.
  
 print. input 도 파이썬에서 이미 만들어 놓은 함수(내장함수)

 함수의 장점 --> 코드의 용도를 구분할수 있다.
                 코드를 재사용 할수 있다.
                 실수를 줄일수 있다.

  <형식> 매개변수, 리턴 없는 가장 간단한 형식
   def 함수이름():      #함수정의
       실행할 코드

   함수이름()           #함수호출  
  
def hello():    #함수정의
    print("Hello world")

hello() #함수호출
hello()

---

# 함수 용어 정리

   입력값 : 매개변수, 인수, 인자
   출력값 : 반환값, 결과값, 돌려주는 값, 리턴

# 매개변수만 있는 함수

 <형식>
 def 함수이름(매개변수1, 매개변수2):    #함수정의
     수행할 코드
    
 함수이름(변수1,변수2)  #함수 호출


def add(a,b):   #함수정의
    print(a+b)

add(10,20)  #함수호출

x=6
y=3
add(x,y)    #함수호출


--

#매개변수, 반환값이 1개인 함수

    <형식>
    def 함수이름(매개변수1, 매개변수2): #함수정의
        수행할코드
        return 반환값(결과값)
    
    변수명 = 함수이름(변수1,변수2) #함수호출
          
def add(a,b):   # 함수정의
    return a+b

z=add(10,20)    #함수 호출한 후 결과값을 z변수에 다시 담았다.
print(z)        # z변수에 제대로 담겼는지 확인해보려고 넣은 코드

--

# 매개변수, 반환값이 2개인 함수

 <형식>
 def 함수이름(매개변수1, 매개변수2):    #함수정의
     수행할코드
     return 반환값1, 반환값2          #리턴값이 튜플로 묶여져서 여러개를 출력하는거 처럼 보여줌

 변수명1,변수명2 = 함수이름(변수1,변수2)  #함수호출


def add_sub(a,b):   #함수정의
    return a+b,a-b

x,y = add_sub(10,20)    #첫번째 결과값을 x에, 두번째 결과값을 y에 담는다.

print(x) #30
print(y) #-10

==============================================


# for문을 이용한 별 모양 출력하기

'''
[문제] for문을 이용해서 사각형으로 별 출력하기

[출력결과]
*****
*****
*****
*****
*****

'''

'''
[문제] for문을 이용해서 계단식으로 별 출력하기

[출력결과]
*
**
***
****
*****

'''

'''
[문제] for문을 이용해서 대각선으로 별 출력하기

[출력결과]
*    
 *   
  *  
   * 
    *

'''

'''
[문제] for문을 이용해서 역삼각형으로 별 출력하기

[출력결과]
*****
 ****
  ***
   **
    *

'''






















